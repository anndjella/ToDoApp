name: CI Pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: ["master" ]

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        working-directory: ./backend
        run: dotnet restore ToDoApi.sln

      - name: Build
        working-directory: ./backend
        run: dotnet build ToDoApi.sln --configuration Release --no-restore

      - name: Test
        working-directory: ./backend
        run: dotnet test ToDoApi.sln



  build-and-push-docker:
    name: docker (${{ matrix.service }})
    needs: build-test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [backend, frontend]
        include:
          - name: backend
            context: ./backend
            dockerfile: ./backend/Dockerfile
            image: ${{ vars.BACKEND_IMAGE_NAME }}
          - name: frontend
            context: ./frontend
            dockerfile: ./frontend/Dockerfile
            image: ${{ vars.FRONTEND_IMAGE_NAME }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub (only on master push)
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ matrix.image }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha
            type=ref,event=pr
            type=ref,event=branch

      - name: Build (and push on master)
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max